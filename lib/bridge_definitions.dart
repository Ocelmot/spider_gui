// AUTO GENERATED FILE, DO NOT EDIT.
// Generated by `flutter_rust_bridge`@ 1.78.0.
// ignore_for_file: non_constant_identifier_names, unused_element, duplicate_ignore, directives_ordering, curly_braces_in_flow_control_structures, unnecessary_lambdas, slash_for_doc_comments, prefer_const_literals_to_create_immutables, implicit_dynamic_list_literal, duplicate_import, unused_import, unnecessary_import, prefer_single_quotes, prefer_const_constructors, use_super_parameters, always_use_package_imports, annotate_overrides, invalid_use_of_protected_member, constant_identifier_names, invalid_use_of_internal_member, prefer_is_empty, unnecessary_const

import 'dart:convert';
import 'dart:async';
import 'package:meta/meta.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge.dart';
import 'package:uuid/uuid.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;

part 'bridge_definitions.freezed.dart';

abstract class DartSpider {
  Future<String> testText({dynamic hint});

  FlutterRustBridgeTaskConstMeta get kTestTextConstMeta;

  Stream<ToUi> init({required String configPath, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kInitConstMeta;

  Future<void> write({required ToProcessor msg, dynamic hint});

  FlutterRustBridgeTaskConstMeta get kWriteConstMeta;
}

class DartUiElement {
  final DartUiElementKind kind;
  final String? id;
  final Uint32List datasetIndices;
  final String text;
  final List<DartUiElement> children;

  const DartUiElement({
    required this.kind,
    this.id,
    required this.datasetIndices,
    required this.text,
    required this.children,
  });
}

enum DartUiElementKind {
  None,
  Spacer,
  Columns,
  Rows,
  Header,
  Text,
  TextEntry,
  Button,
}

@freezed
sealed class DartUiInput with _$DartUiInput {
  const factory DartUiInput.click() = DartUiInput_Click;
  const factory DartUiInput.text(
    String field0,
  ) = DartUiInput_Text;
}

class DartUiPage {
  final String id;
  final String name;
  final DartUiElement root;

  const DartUiPage({
    required this.id,
    required this.name,
    required this.root,
  });
}

@freezed
sealed class ToProcessor with _$ToProcessor {
  const factory ToProcessor.pair(
    String field0,
  ) = ToProcessor_Pair;
  const factory ToProcessor.unpair() = ToProcessor_Unpair;
  const factory ToProcessor.input({
    required String pageId,
    required String elementId,
    required Uint32List datasetIndices,
    required DartUiInput input,
  }) = ToProcessor_Input;
}

@freezed
sealed class ToUi with _$ToUi {
  const factory ToUi.unpaired() = ToUi_Unpaired;
  const factory ToUi.pairs({
    required List<(String, String)> relations,
  }) = ToUi_Pairs;
  const factory ToUi.connecting({
    required String msg,
  }) = ToUi_Connecting;
  const factory ToUi.connected() = ToUi_Connected;
  const factory ToUi.setPageOrder({
    required List<String> pages,
  }) = ToUi_SetPageOrder;
  const factory ToUi.setPage({
    required DartUiPage page,
  }) = ToUi_SetPage;
}
